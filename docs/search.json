[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"  Welcome STAT 2102: Applied Statistical Computing class. website contains comprehensive lecture notes supplements materials/codes given class. Course Description: course introduction R programming. learning basic programming components, defining variables vectors, learning different data structures R, students , via assignments, study advanced topics, conditionals, modular programming, data visualization, various R packages. Students also learn fundamental concepts computational complexity practice writing reports based data analyses. Course Objectives: purpose course introduce students R programming give experience statistical procedures. Students successfully complete course able :Manipulate wrangle data different structuresExplore data via visualization basic models exploratory data analysisTackle familiar statistical concepts using RCommunicate results obtained data analysis","code":""},{"path":"lecture-01.html","id":"lecture-01","chapter":"Lecture 01","heading":"Lecture 01","text":"","code":""},{"path":"lecture-01.html","id":"introduction","chapter":"Lecture 01","heading":"Introduction","text":"R programming language software environment statistical analysis, graphics representation, reporting. R created Ross Ihaka Robert Gentleman University Auckland, New Zealand, currently developed R Development Core Team. free charge open-source.Nowadays, many companies, universities, individuals backgrounds shifting towards using R, ():free open-source, available every major platform.Results produced R reproducible.R diverse supportive community, online offline.numerous set packages various tasks statistical analysis, data science, data visualization, reporting results etc.Powerful tools communicating results.RStudio IDE (Integrated Development Environment).Deep-seated language support data analysis.strong foundation functional programming.","code":""},{"path":"lecture-01.html","id":"getting-started-downloading-and-installing-r-rstudio","chapter":"Lecture 01","heading":"Getting Started: Downloading and Installing R & RStudio","text":"","code":""},{"path":"lecture-01.html","id":"installing-r","chapter":"Lecture 01","heading":"Installing R","text":"first thing need install R computer. works pretty much every platform available, including widely used Windows, Mac OS, Linux systems. can download R . Pick operating system follow instructions stated page. download R, install machine.","code":""},{"path":"lecture-01.html","id":"installing-rstudio","chapter":"Lecture 01","heading":"Installing RStudio","text":"R old-fashion, old-school interface, less intuitive makes coding harder (especially beginners). Thus, using RStudio instead. RStudio IDE, Integrated Development Environment, user-friendly interface equipped many useful features. facilitates extensive code editing, development well various features make R easy language implement. using RStudio call R. can dowload RStudio .Note, order work RStudio, first need download install R.","code":""},{"path":"lecture-01.html","id":"rstudio-interface","chapter":"Lecture 01","heading":"RStudio Interface","text":"may initially overwhelmed different panes tabs available RStudio. , things, take little bit get used eventually learn love layout.RStudio 4 main panes:","code":""},{"path":"lecture-01.html","id":"code-editor-source-pane","chapter":"Lecture 01","heading":"Code Editor (Source Pane)","text":"likely pane spend majority time top left corner. ’s called Code Editor (.k.Source Pane). place create edit R Scripts (files \".R\" extension contain code). open RStudio, automatically start new Untitled script. start typing untitled R script, always save file new file name (example, \"script_1.R\"). way, something computer crashes ’re working, R code saved re-open RStudio.notice, typing code R scripts execute . run entire code, can click Run button top pane. , want execute specific line code, put cursor line press Command + Return Mac Control + Enter PC.","code":""},{"path":"lecture-01.html","id":"console-pane","chapter":"Lecture 01","heading":"Console Pane","text":"bottom left pane called Console. using Console way check work thoughts. Basically, Console place R code run executing R scripts. place output/results displayed.","code":""},{"path":"lecture-01.html","id":"environmenthistory-pane","chapter":"Lecture 01","heading":"Environment/History Pane","text":"Environment (.k.Global Environment, .k.Working Environment) tab (top right corner) shows names data objects ’ve defined current R session. can also see information objects contain.History tab simply shows history code ’ve previously evaluated Console.","code":""},{"path":"lecture-01.html","id":"output-pane","chapter":"Lecture 01","heading":"Output Pane","text":"bottom right pane RStudio contains tabs default useful place view variety miscellaneous information RStudio projects files.Files: leftmost tab shows file folder structure. shows files stored, called, folders may exist project folder.Plots/Viewer: shows resulting graphs/figures R code generated.Packages: shows packages downloaded computer. can also see packages loaded current working environment looking see check-mark exists next package name.Help: shows documentations R functions, datasets, packages available R.","code":""},{"path":"lecture-01.html","id":"r-as-a-calculator-operators","chapter":"Lecture 01","heading":"R as a Calculator: Operators","text":"operator symbol tells R perform specific mathematical logical manipulations. R language rich built-operators provides following types operators:Arithmetic OperatorsRelational OperatorsLogical OperatorsAssignment OperatorsIn lecture consider arithmetic assignment operators. Later , discuss relational logical ones.","code":""},{"path":"lecture-01.html","id":"arithmetic-operators","chapter":"Lecture 01","heading":"Arithmetic Operators","text":"R supports various arithmetic operations. words, can use R simple calculator. instance,following table shows basic arithmetic operators supported R language:","code":"\nprint(2 + 3)\n#> [1] 5\nprint(4*5 - 2/3)\n#> [1] 19.33333"},{"path":"lecture-01.html","id":"assignment-operators","chapter":"Lecture 01","heading":"Assignment Operators","text":"order create variable R, can use <- assignment symbol. example, let’s create variable x give value 4:Let’s create another variable y, equal 10:create variables, stored global environment available use operations. Now R knows x = 4 y = 10.Note, R case sensitive. mean? means R x X different objects. , now call X variable, R throw error tell object exist global environment:","code":"\nx <- 4\nprint(x)\n#> [1] 4\ny <- 10\nprint(y)\n#> [1] 10\nprint(x + y)\n#> [1] 14\nprint(X)\n#> Error: object 'X' not found"},{"path":"lecture-01.html","id":"working-with-the-global-environment","chapter":"Lecture 01","heading":"Working with the Global Environment","text":"","code":""},{"path":"lecture-01.html","id":"saving-the-global-environment","chapter":"Lecture 01","heading":"Saving the Global Environment","text":"’ve run long code produced valuable results, might want save output stored global environment now. , can execute following line code, saves global environment working directory (place computer R saves files):","code":"\nsave.image()"},{"path":"lecture-01.html","id":"removing-objects-from-the-global-environment","chapter":"Lecture 01","heading":"Removing Objects from the Global Environment","text":"remove specific object (suppose variable x) Global Environment, use rm() function:remove objects stored Global Environment, use rm(list = ls()) function:","code":"\nrm(x)\nrm(list = ls())"},{"path":"lecture-01.html","id":"listing-objects-stored-in-the-global-environment","chapter":"Lecture 01","heading":"Listing Objects Stored in the Global Environment","text":"list objects stored Global Environment, use ls() function:","code":"\nls()"},{"path":"lecture-01.html","id":"working-directory","chapter":"Lecture 01","heading":"Working Directory","text":"mentioned, R stores files working directory. check working directory machine , use getwd() function:","code":"\ngetwd()\n#> [1] \"C:/Users/alexp/OneDrive/Desktop/2102/Spring 25/2102\""},{"path":"lecture-01.html","id":"getting-help","chapter":"Lecture 01","heading":"Getting Help","text":"Sometimes don’t exactly know certain functions work. can use ? console followed function name figure inputs (arguments) function can utilized. example, let’s check mean() function works:Now output pane (bottom right pane) Help tab see information mean() function.","code":"\n?mean"}]
